import React from 'react'
import Head from 'next/head'
import axios from 'axios'
import platformOptions from '../public/platformOptions.js'
import gameOptions from '../public/gameOptions.js'
import { Button,Typography, Grid, TextField, Select, InputLabel, MenuItem } from '@material-ui/core'
import { useState, useEffect } from 'react'
import styles from '../styles/Home.module.css'

const Main = () => {
    const [data, setData] = useState()
    const [enableSubmit, setEnableSubmit] = useState(false)
    const [game, setGame] = useState("")
    const [platform, setPlatform] = useState("")
    const [input, setInput] = useState("")
    const handleGameChange = (event) => {
        setGame(event.target.value)
    }
    const handlePlatformChange = (event) => {
        setPlatform(event.target.value)
    }
    const handleInputChange = (event) => {
        setInput(event.target.value)
    }
    const handleClearButton = () => {
        setEnableSubmit(false)
        setGame("")
        setPlatform("")
        setInput("")
    }
    const handleSubmitButton = async () => {
        const url = `http://localhost:3000/api/hello`
        axios({
            method: 'post',
            url: url,
            responseType: 'json',
            data: {
                game,
                platform,
                input
            }
        })
        .then((response) => {
            const data = response.data.result
            setData(data)
        })
        .catch((error) => {
            console.log(error.response.data)
            const errorMessage = error?.response?.data?.result?.message ?? "Server responded with an error"
            console.log(errorMessage)
        })
        .finally(() => {
            handleClearButton()
        })
    }
    useEffect(() => {
        setEnableSubmit( game !== "" && platform !== "" && input !== "" )
    }, [game, platform, input])
    return (
        <main className={styles.main}>
            <Head>
                <title>{ process?.env?.NEXT_PUBLIC_APP_NAME ?? "MY TRACKER" }</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/apex-favicon.ico" />
            </Head>
            <br/>
            <div className={styles.container}>
                <Grid container spacing={2}>
                    <Grid item xs={12}>
                        <InputLabel required>Select a game</InputLabel>
                        <Select
                        id="a"
                        value={game}
                        onChange={handleGameChange}
                        fullWidth
                        >
                            { gameOptions.map( (item) => <MenuItem key={item.id} value={item.value}>{item.name}</MenuItem>) }
                        </Select>
                    </Grid>
                    <Grid item xs={12}>
                        <InputLabel required>Select a platform</InputLabel>
                        <Select
                        id="b"
                        value={platform}
                        onChange={handlePlatformChange}
                        fullWidth
                        >
                            { platformOptions.map( (item) => <MenuItem key={item.id} value={item.value}>{item.name}</MenuItem>) }
                        </Select>
                    </Grid>
                    <Grid item xs={12}>
                        <InputLabel required>Input your id</InputLabel>
                        <TextField
                        value={input}
                        onChange={handleInputChange}
                        inputProps={{min: 0, style: { textAlign: 'center' }}}
                        fullWidth
                        >

                        </TextField>
                    </Grid>
                    <Grid item xs={12}>
                        <Button variant="contained" color="default" style={{marginRight: '20px'}} onClick={handleClearButton}>
                            Clear
                        </Button>
                        <Button disabled={!enableSubmit} variant="contained" color="primary" onClick={handleSubmitButton}>
                            Submit
                        </Button>
                    </Grid>
                    {
                        game === "overwatch" &&
                        <Grid item xs={12}>
                            <Typography>
                                <span style={{color: 'red'}}> PLEASE NOTE: </span> Player's profile must be public in order to fetch data correctly!
                            </Typography>
                        </Grid>
                    }
                    {
                        game !== "" &&
                        <Grid item xs={12}>
                            <Typography>
                                Your selected game is {game}
                            </Typography>
                        </Grid>
                    }
                    {
                        platform !== "" &&
                        <Grid item xs={12}>
                            <Typography>
                                Your selected platform is {platform}
                            </Typography>
                        </Grid>
                    }
                    {
                        input !== "" &&
                        <Grid item xs={12}>
                            <Typography>
                                Your selected input is {input}
                            </Typography>
                        </Grid>
                    }
                    <Grid item xs={12}>
                        <div className={styles.result}>
                            {JSON.stringify(data)}
                        </div>
                    </Grid>
                </Grid>
            </div>
            <br/>
        </main>
    )
}

export default Main
